{"mappings":"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","sources":["src/furryfont.js"],"sourcesContent":["function render_editor() {\n    window.quill = new Quill('#editor', {\n        modules: {\n            toolbar: [\n            [{ header: [1, 2, 3, 4, 5, false] }],\n            ['bold', 'italic', 'underline', 'strike'],\n            ['link', 'blockquote'],\n            [{ 'script': 'sub'}, { 'script': 'super' }],\n            [{'align': ['', 'center', 'right']}],\n            [{ 'color': [] }],\n            ['clean']\n            ]\n        },\n        placeholder: 'Compose an epic... or paste in one!',\n        theme: 'snow',  // or 'bubble'\n    });\n}\n\nfunction convertText(quillContents) {\n    let ops = quillContents.ops\n\n    let convertedText = document.getElementById(\"convertedText\")\n    convertedText.innerHTML = \"\" //clear placeholder.\n\n    // blocks in quill are handled by a single newline insert with block properties.\n    // so we need to store a block before writing it since formatting might be at the end\n    let currentBlock = \"\"\n\n    ops.forEach((element, idx) => {\n        let attr = element?.attributes\n        let text = element.insert\n\n        currentBlock += convertQuillOp(text, attr)\n\n        // if this is a newline only with attributes, it's likely a block end\n        if (text == '\\n' || idx == ops.length-1) {\n            // per https://github.com/quilljs/quill/issues/3035\n            // block formatting applies from the block operation back to the last \\n, so only format the current one\n\n            // cannot use destructuring assignemtn due to parcel error.\n            let res = getLastLine(currentBlock)\n            let prev = res[0]\n            let last = res[1]\n\n            // place anything up to the last block since we don't want to format it.\n            convertedText.innerText += prev.length > 0 ? prev + \"\\n\" : \"\" // auto add a line break, unless there's no content in prev\n            currentBlock = last + \"\\n\" //ensure there's a trailing newline, in case this is a normal paragraph\n\n            // handle block level items before placing. Note that we dont' add justify alignment tags\n            // since it's not understood by FA.\n            if (attr?.align && attr.align != 'justify') currentBlock = `[${attr.align}]${currentBlock.trim()}[/${attr.align}]\\n`\n            if (attr?.header) currentBlock = `[h${attr.header}]${currentBlock.trim()}[/h${attr.header}]\\n`\n            if (attr?.blockquote) currentBlock = `[quote]${currentBlock.trim()}[/quote]\\n`\n\n            // place the block\n            convertedText.innerText += currentBlock\n            currentBlock = ''\n        }\n        \n    });\n\n    // most people will likely want to normalize all linebreaks into paragraph breaks\n    const newlines = /(<br>)+/g\n    convertedText.innerHTML = convertedText.innerHTML.replaceAll(newlines, '\\n<br /><br />')\n}\n\nfunction getLastLine(text) {\n    let idx = text.trimEnd().lastIndexOf(\"\\n\")\n    return [text.substring(0, idx), text.substring(idx).trim()]\n}\n\nfunction convertQuillOp(text, attr) {\n    if (text == '') return ''\n\n    if (attr) {\n        if (attr.italic) {\n            text = \"[i]\" + text + \"[/i]\"\n        }\n        if (attr.bold) {\n            text = \"[b]\" + text + \"[/b]\"\n        }\n\n        if (attr.underline) {\n            text = \"[u]\" + text + \"[/u]\"\n        }\n\n        if (attr.link) {\n            text = `[url=${attr.link}]${text}[/url]`\n        }\n        if (attr.script) {\n            if (attr.script == 'super') text = \"[sup]\" + text + \"[/sup]\"\n            else text = \"[sub]\" + text + \"[/sub]\"\n        }\n        if (attr.color && attr.color != \"#000000\" && attr.color != \"black\") {\n            text = `[color=${attr.color}]${text}[/color]`\n        }\n    }\n\n    return text\n\n}\n\ndocument.getElementById(\"convertButton\").onclick = (e) => {\n    e.preventDefault()\n    console.log(\"converting text...\")\n    convertText(quill.getContents())\n}\n\ndocument.getElementById(\"copyButton\").onclick = (e) => {\n    e.preventDefault()\n    console.log(\"adding text to clipboard\")\n    let textToCopy = document.getElementById(\"convertedText\").innerText\n    navigator.clipboard.writeText(textToCopy)\n}\n\ndocument.getElementById(\"downloadButton\").onclick = (e) => {\n    e.preventDefault()\n    console.log(\"downloading converted text...\")\n    let textToDownload = document.getElementById(\"convertedText\").innerText\n\n    let elem = document.createElement(\"a\")\n    elem.setAttribute(\"href\", 'data:text/plain;charset=utf-8,' + encodeURIComponent(textToDownload))\n    elem.setAttribute(\"download\", \"story.txt\")\n\n    elem.style.display = 'none'\n    document.body.appendChild(elem)\n    elem.click()\n    document.body.removeChild(elem)\n}\nrender_editor()"],"names":[],"version":3,"file":"index.563467c1.js.map","sourceRoot":"/__parcel_source_root/"}